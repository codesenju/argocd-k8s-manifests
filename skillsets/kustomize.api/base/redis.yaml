apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: skillsets-redis-db
spec:
  selector:
    matchLabels:
      app: redis # has to match .spec.template.metadata.labels
  serviceName: "skillsets-redis-db"
#  replicas: 0 # by default is 1
  template:
    metadata:
      labels:
        app: redis # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: redis
        image: redis:7
        command:
          - redis-server
          - --save
          - "60"
          - "1"
          - --loglevel
          - debug
        resources:
          requests:
            cpu: "256m"
            memory: "512M"
        ports:
        - containerPort: 6379
          name: redis-port
        volumeMounts:
        - name: redis-data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: "efs-sc-dynamic"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: skillsets-redis-db
spec:
  selector:
    app: redis
  type: ClusterIP
  ports:
  - name: redis-port
    protocol: TCP
    port: 6379
    targetPort: 6379
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.
    # nodePort: 
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-test
spec:
  serviceName: "redis-trest"
  replicas: 3
  selector:
    matchLabels:
      app: redis-test
  template:
    metadata:
      labels:
        app: redis-test
    spec:
      initContainers:
      - name: redis-init
        image: redis:5.0.12
        command:
        - sh
        - -c
        - |
          if [ $(hostname) != 'redis-test-0' ]; then
            redis-cli -h redis-test-0 ping
            while [ $? -ne 0 ]; do
              echo 'Waiting for redis-test-0'
              sleep 1
              redis-cli -h redis-test-0 ping
            done
            echo "Setting replicaof for $(hostname)"
            redis-cli -h $(hostname) replicaof redis-test-0 6379
          fi
      containers:
      - name: redis-test
        image: redis:5.0.12
        command:
          - redis-server
          - "--appendonly"
          - "yes"
        ports:
        - containerPort: 6379
          name: client
        volumeMounts:
        - name: data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-test
spec:
  selector:
    app: redis-test
  type: ClusterIP
  ports:
  - name: redis-port
    protocol: TCP
    port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-test-0
spec:
  selector:
    app: redis-test
    statefulset.kubernetes.io/pod-name: redis-test-0
  type: ClusterIP
  ports:
  - name: redis-port
    protocol: TCP
    port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-test-1
spec:
  selector:
    app: redis-test
    statefulset.kubernetes.io/pod-name: redis-test-1
  type: ClusterIP
  ports:
  - name: redis-port
    protocol: TCP
    port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-test-2
spec:
  selector:
    app: redis-test
    statefulset.kubernetes.io/pod-name: redis-test-2
  type: ClusterIP
  ports:
  - name: redis-port
    protocol: TCP
    port: 6379
    targetPort: 6379